{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactsForm/ContactsForm.module.css","components/ContactsForm/ContactsForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","ContactsForm","state","name","number","nameInputId","shortid","generate","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","data","id","props","onSubmit","reset","this","className","s","contactsForm","htmlFor","formLabel","type","onChange","Component","ContactList","contacts","onDeleteContact","console","log","map","contactItem","onClick","Filter","App","filter","changeFilter","getVisibleContacts","normalFilter","toLowerCase","contact","includes","formSubmitHandler","some","el","alert","prevState","deleteContact","contactId","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c8d1562.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactList_contactItem__3KrbV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsForm\":\"ContactsForm_contactsForm__3crqd\",\"formLabel\":\"ContactsForm_formLabel__1x8tV\"};","import React, { Component } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./ContactsForm.module.css\";\r\n\r\nclass ContactsForm extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  nameInputId = shortid.generate();\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, number } = this.state;\r\n\r\n    const data = {\r\n      id: shortid.generate(),\r\n      name: name,\r\n      number: number,\r\n    };\r\n\r\n    this.props.onSubmit(data);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={s.contactsForm}>\r\n        <label htmlFor={this.nameInputId} className={s.formLabel}>\r\n          Name\r\n        </label>\r\n        <input\r\n          className={s.formLabel}\r\n          id={this.nameInputId}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={this.state.name}\r\n          onChange={this.handleChange}\r\n        />\r\n        <label htmlFor={this.nameInputId} className={s.formLabel}>\r\n          Number\r\n        </label>\r\n        <input\r\n          className={s.formLabel}\r\n          id={this.nameInputId}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={this.state.number}\r\n          onChange={this.handleChange}\r\n        />\r\n\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactsForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  console.log(contacts);\r\n  return (\r\n    <>\r\n      <ul>\r\n        {contacts.map(({ name, id, number }) => (\r\n          <li key={id} className={s.contactItem}>\r\n            <p>\r\n              <span>{name}:</span> {number}\r\n            </p>\r\n            <button type=\"button\" onClick={() => onDeleteContact(id)}>\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\nContactList.propTypes = {\r\n  contacts: PropTypes.func.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <>\r\n    <p>Find contacts by name</p>\r\n    <label htmlFor=\"\">\r\n      <input type=\"text\" value={value} onChange={onChange} />\r\n    </label>\r\n  </>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\nexport default Filter;\r\n","import \"./App.css\";\nimport ContactsForm from \"./components/ContactsForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\n\nimport React, { Component } from \"react\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n\n    const normalFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalFilter)\n    );\n  };\n\n  formSubmitHandler = (data) => {\n    const { contacts } = this.state;\n    if (\n      contacts.some((el) => el.name.toLowerCase() === data.name.toLowerCase())\n    ) {\n      return alert(`${data.name} is already in contacts`);\n    }\n\n    // const newContact = this.state.contacts.concat(data);\n    // console.log(newContact);\n\n    this.setState((prevState) => ({\n      contacts: [...prevState.contacts, data],\n    }));\n\n    console.log(data);\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  render() {\n    console.log(this.state.contacts);\n    const { filter } = this.state;\n\n    const filteredContacts = this.getVisibleContacts();\n\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <ContactsForm onSubmit={this.formSubmitHandler} />\n        <h2>Contacts</h2>\n\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={filteredContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}